from calculating import *
from graph import *

data = [
    170.024,
    79.539,
    130.762,
    90.089,
    163.334,
    136.418,
    200.392,
    293.442,
    219.744,
    380.663,
    195.666,
    322.105,
    490.399,
    364.577,
    58.487,
    72.014,
    177.088,
    183.206,
    22.328,
    98.121,
    140.249,
    221.596,
    86.552,
    90.440,
    233.314,
    16.709,
    169.271,
    47.460,
    275.898,
    40.941,
    313.818,
    60.952,
    34.950,
    54.336,
    329.629,
    192.693,
    192.847,
    194.905,
    110.372,
    209.361,
    180.888,
    288.685,
    130.890,
    584.312,
    380.720,
    165.779,
    236.191,
    94.679,
    111.330,
    248.540,
    361.398,
    98.416,
    63.981,
    303.634,
    86.800,
    208.942,
    263.589,
    88.757,
    43.298,
    131.125,
    214.791,
    208.163,
    223.119,
    179.650,
    40.163,
    189.742,
    243.522,
    112.035,
    340.319,
    404.583,
    294.998,
    72.711,
    251.290,
    20.030,
    146.130,
    100.434,
    150.415,
    199.821,
    87.417,
    257.168,
    15.892,
    14.836,
    51.800,
    418.550,
    7.929,
    62.499,
    174.340,
    18.645,
    159.722,
    46.789,
    96.408,
    116.752,
    96.128,
    164.833,
    68.306,
    420.383,
    118.449,
    42.489,
    222.866,
    141.328,
    115.424,
    58.955,
    38.136,
    126.614,
    103.409,
    116.393,
    74.402,
    22.548,
    92.365,
    82.353,
    126.877,
    39.683,
    179.549,
    170.339,
    92.796,
    292.580,
    35.073,
    35.910,
    365.053,
    99.318,
    170.044,
    439.059,
    470.488,
    357.771,
    430.030,
    73.933,
    83.735,
    52.641,
    93.914,
    38.858,
    80.181,
    49.148,
    323.159,
    195.029,
    129.108,
    98.240,
    441.188,
    153.093,
    199.637,
    79.140,
    120.930,
    83.837,
    89.329,
    239.461,
    160.427,
    262.283,
    155.024,
    11.625,
    241.299,
    22.612,
    58.050,
    39.053,
    243.639,
    218.856,
    76.824,
    327.907,
    136.962,
    371.455,
    101.572,
    329.667,
    115.963,
    161.151,
    296.856,
    119.736,
    109.337,
    117.836,
    176.364,
    117.964,
    190.672,
    62.132,
    171.453,
    330.865,
    405.409,
    223.720,
    239.713,
    199.497,
    49.795,
    61.673,
    52.205,
    72.039,
    99.700,
    233.580,
    150.956,
    198.003,
    201.332,
    108.135,
    80.208,
    173.854,
    144.678,
    175.169,
    129.944,
    142.436,
    79.915,
    86.711,
    56.352,
    43.214,
    140.616,
    206.702,
    168.478,
    137.919,
    51.298,
    244.433,
    207.864,
    97.953,
    32.952,
    255.189,
    133.041,
    100.125,
    140.072,
    196.401,
    119.388,
    175.919,
    266.864,
    199.475,
    101.431,
    365.202,
    270.031,
    177.405,
    175.620,
    140.164,
    289.649,
    139.261,
    205.318,
    132.671,
    253.934,
    172.386,
    119.386,
    90.815,
    94.161,
    301.453,
    40.729,
    237.380,
    52.348,
    13.091,
    270.564,
    637.907,
    99.353,
    96.998,
    214.060,
    215.158,
    166.624,
    128.606,
    173.574,
    143.082,
    478.023,
    322.467,
    284.337,
    46.326,
    141.568,
    202.882,
    18.524,
    49.681,
    138.104,
    334.007,
    43.652,
    650.381,
    116.376,
    53.596,
    436.236,
    158.582,
    192.722,
    205.115,
    70.249,
    138.277,
    42.582,
    264.834,
    151.359,
    125.369,
    266.426,
    364.757,
    61.749,
    10.127,
    65.263,
    40.274,
    55.823,
    153.138,
    218.336,
    220.224,
    376.028,
    89.408,
    97.385,
    112.528,
    25.728,
    109.802,
    413.923,
    204.841,
    142.826,
    265.614,
    48.349,
    348.667,
    257.964,
    186.919,
    132.503,
    486.858,
    219.577,
    123.580,
    151.368,
    109.114,
    288.021,
    138.902,
]


def main():
    ME = Mathematical_expectation(data)
    print(f"Математическое ожидание: {ME}")

    dispersion = Dispersion(data)
    print(f"Дисперсия: {dispersion}")

    std_deviation = Standard_deviation(dispersion)
    print(f"Среднеквадратическое отклонение: {std_deviation}")

    cv = Coefficient_of_variation(std_deviation, dispersion)
    print(f"Коэффициент вариации: {cv}%")

    Confidence_interval(data, std_deviation, ME, 0.9)
    Confidence_interval(data, std_deviation, ME, 0.95)
    Confidence_interval(data, std_deviation, ME, 0.99)

    Relative_deviation(data)
    analyze_sequence(data)
    autocorrelation_analysis(data)
    plot_frequency_histogram(data)
    approximate_distribution(data)


if __name__ == "__main__":
    main()
